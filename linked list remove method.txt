class Node:
    def __init__(self,val):
        self.val = val
        self.next = None

class linkedlist:
    def __init__(self):
        self.head=None
    def createll(self,n):
        i=0
        while i<n:
            val=int(input("enter data:"))
            new_node=Node(val)
            if self.head==None:
                self.head=new_node
            else:
                t=self.head
                while t.next!=None:
                    t=t.next
                t.next=new_node
            i=i+1
    def show(self,head):
        t=head
        print("\nlist of nodes:")
        s=0
        while t:
            print(t.val,end=" ")
            s=s+t.val
            t=t.next
        print("\nTotal",s)
    def split(self):
        slow=self.head
        fast=self.head
        prev=None
        while fast and fast.next:
            prev=slow
            slow=slow.next
            fast=fast.next.next

        second=slow
        prev.next=None
        print("\n1st linkedlist:")
        self.show(self.head)
        print("\n2nd linkedlist:")
        self.show(second)
   
    def removeNode(self, head,val):
        temp = Node(0)
        temp.next = head
        prev,curr = temp,head
        while curr:
            if curr.val == val:
                prev.next = curr.next
            else:
                prev=curr
            curr=curr.next
       return temp.next
    
obj=linkedlist()
n=int(input("enter n val:"))
obj.createll(n)
obj.show(obj.head)
val=int(input("enter val to delete:"))
obj.head.removeNode(obj.head,val)
print("after delete")
obj.show(obj.head)

             
